
When updating libcurl from SVN into this project,

Need to remove all the Makefiles
& probably better to manually compare the config header files & migrate across that way?  But need to hack it to not use LOCK_DIR...

Create an universal (x86 & arm) lib:
lipo -create /ipos-release/libcurl.a /ip-sim-release/libcurl.a -output libcurl-release.a

DIFFS:


Index: /Users/nicc/local/src/PocketSword/externals/clucene/CLucene/store/FSDirectory.cpp
===================================================================
--- /Users/nicc/local/src/PocketSword/externals/clucene/CLucene/store/FSDirectory.cpp	(revision 8)
+++ /Users/nicc/local/src/PocketSword/externals/clucene/CLucene/store/FSDirectory.cpp	(working copy)
@@ -248,8 +248,8 @@
 			if ( LOCK_DIR == NULL )
 				LOCK_DIR=LUCENE_LOCK_DIR_ENV_FALLBACK;
 			#endif
-			if ( LOCK_DIR == NULL )
-				_CLTHROWA(CL_ERR_IO, "Couldn't get determine lock dir");
+		//if ( LOCK_DIR == NULL )
+		//_CLTHROWA(CL_ERR_IO, "Couldn't get determine lock dir");
 		#endif
 		
 		return LOCK_DIR;
@@ -260,7 +260,8 @@
    refCount(0),
    useMMap(false)
   {
-  	_realpath(path,directory);//set a realpath so that if we change directory, we can still function
+	  //_realpath(path,directory);//set a realpath so that if we change directory, we can still function
+	strcpy(directory, path);
   	if ( !directory || !*directory ){
   		strcpy(directory,path);	
   	}
@@ -273,16 +274,16 @@
     }
     
     // Ensure that lockDir exists and is a directory.
-		struct fileStat fstat;
-	  if ( fileStat(tmplockdir,&fstat) != 0 ) {
-			//todo: should construct directory using _mkdirs... have to write replacement
-			if ( _mkdir(directory) == -1 ){
-				_CLTHROWA(CL_ERR_IO,"Cannot create temp directory"); //todo: make richer error
-			}
-		}
-		if ( !(fstat.st_mode & S_IFDIR) ){
-			_CLTHROWA(CL_ERR_IO, "Found regular file where directory expected"); //todo: make richer error: " + lockDir);
-    }
+//		struct fileStat fstat;
+//	  if ( fileStat(tmplockdir,&fstat) != 0 ) {
+//			//todo: should construct directory using _mkdirs... have to write replacement
+//			if ( _mkdir(directory) == -1 ){
+//				_CLTHROWA(CL_ERR_IO,"Cannot create temp directory"); //todo: make richer error
+//			}
+//		}
+//		if ( !(fstat.st_mode & S_IFDIR) ){
+//			_CLTHROWA(CL_ERR_IO, "Found regular file where directory expected"); //todo: make richer error: " + lockDir);
+//    }
 	
 
     if (createDir) {

--------------------------------------------------
--------------------------------------------------
--------------------------------------------------

Index: /Users/nicc/local/src/PocketSword/externals/clucene/CLucene/CLConfig.h
===================================================================
--- /Users/nicc/local/src/PocketSword/externals/clucene/CLucene/CLConfig.h	(revision 8)
+++ /Users/nicc/local/src/PocketSword/externals/clucene/CLucene/CLConfig.h	(working copy)
@@ -65,12 +65,12 @@
 //#define LUCENE_LOCK_DIR "/tmp"
 //
 //define this to try and load the lock dir from this specified environment variable
-#define LUCENE_LOCK_DIR_ENV_1 "TEMP"
+//#define LUCENE_LOCK_DIR_ENV_1 "TEMP"
 //define this if you want to have look up this environment variable if the first one fails
-#define LUCENE_LOCK_DIR_ENV_2 "TMP"
+//#define LUCENE_LOCK_DIR_ENV_2 "TMP"
 //define this if you want to have a fallback directory, if not defined then 
 //the lockdirectory will be the index directory
-#define LUCENE_LOCK_DIR_ENV_FALLBACK "/tmp"
+//#define LUCENE_LOCK_DIR_ENV_FALLBACK "/tmp"
 //
 ////////////////////////////////////////////////////////////////////


--------------------------------------------------
--------------------------------------------------
--------------------------------------------------

